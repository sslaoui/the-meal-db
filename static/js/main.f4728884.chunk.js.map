{"version":3,"sources":["components/categories/hooks/useCategories.tsx","components/categories/Categories.tsx","components/latestMeals/hooks/useLatestMeals.tsx","components/latestMeals/LatestMeals.tsx","components/randomMeals/hooks/useRandomMeal.tsx","components/randomMeals/RandomMeals.tsx","components/dashboard/hooks/useBrowseByName.tsx","components/meals/mealDetails/hooks/useMealDetails.tsx","components/meals/mealDetails/MealDetails.tsx","components/meals/Meals.tsx","components/dashboard/hooks/useSearch.tsx","components/dashboard/Dashboard.tsx","components/category/hooks/useCategory.tsx","router/routes.tsx","components/category/Category.tsx","components/SidebarMenu.tsx","components/notFound/NotFound.tsx","images/meal_logo.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["emptyCategoriesList","categoriesEmptyState","categories","hasCategories","isLoading","error","Categories","useState","categoriesState","setCategoriesState","useEffect","a","axios","get","then","res","data","length","isCancel","fetchCategories","useCategories","history","useHistory","className","Header","as","Loader","active","inline","Grid","map","category","Column","mobile","tablet","computer","Card","onClick","handleClick","bind","strCategory","Image","src","strCategoryThumb","wrapped","ui","Content","idCategory","push","pathname","emptyLatestMealsList","latestMealsEmptyState","latestMeals","hasLatestMeals","LatestMeals","latestMealsState","setLatestMealsState","meals","fetchLatestMeals","useLatestMeals","Item","Group","meal","size","strMealThumb","strMeal","Label","color","content","Meta","strArea","Description","strInstructions","Extra","strYoutube","href","rel","target","Icon","name","idMeal","emptyRandomMeal","randomMealEmptyState","randomMeal","hasRandomMeal","RandomMeals","randomMealState","setRandomMealState","hasRandomMeals","fetchRandomMeals","useRandomMeal","emptyMealList","mealsEmptyState","hasMeals","emptyMealDetails","mealDetailsEmptyState","mealDetails","hasMealDetails","MealDetails","mealId","open","openDialog","closeDialog","mealDetailsState","setMealDetailsState","fetchMealDetails","useMealDetails","Fragment","Modal","closeIcon","onClose","onOpen","List","columns","divided","Row","strIngredient1","strMeasure1","strIngredient2","strMeasure2","strIngredient3","strMeasure3","strIngredient4","strMeasure4","strIngredient5","strMeasure5","strIngredient6","strMeasure6","strIngredient7","strMeasure7","strIngredient8","strMeasure8","strIngredient9","strMeasure9","strIngredient10","strMeasure10","strIngredient11","strMeasure11","strIngredient12","strMeasure12","strIngredient13","strMeasure13","strIngredient14","strMeasure14","strIngredient15","strMeasure15","Meals","selectedMealId","setSelectedMealId","React","setOpenDialog","emptySearchResults","searchResultsEmptyState","searchResults","hasSearchResults","Dashboard","mealFirstLetter","setMealFirstLetter","mealsFirstLetter","mealsState","setMealsState","fetchMealsByName","useBrowseByName","searchQuery","setSearchQuery","searchResultsState","setSearchResultsState","baseURL","searchByName","useSearch","panes","char","menuItem","toUpperCase","render","Tab","Pane","attached","renderTabContent","key","icon","Input","type","placeholder","action","onChange","e","value","onKeyDown","handleKeyDown","Button","menu","pointing","firstLetter","routes","path","exact","label","isNaviItem","component","categoryId","useParams","id","fetchCategory","useCategory","SidebarMenu","Menu","fluid","vertical","route","children","match","Link","to","NotFound","basic","flatten","routesObjc","flatRoutes","forEach","App","basename","image","mealLogo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4728884.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport type CategoryProps = {\n    idCategory: string;\n    strCategory: string;\n    strCategoryDescription: string;\n    strCategoryThumb: string;\n};\n\ntype CategoriesState = {\n    categories: Array<CategoryProps>;\n    hasCategories?: boolean;\n    isLoading?: boolean;\n    error?: Error | null;\n};\n\nconst emptyCategoriesList: Array<CategoryProps> = [];\n\nconst categoriesEmptyState: CategoriesState = {\n    categories: emptyCategoriesList,\n    hasCategories: false,\n    isLoading: true,\n    error: null,\n};\n\nexport const useCategories = () => {\n    const [categoriesState, setCategoriesState] = useState<CategoriesState>(categoriesEmptyState);\n    const baseURL = 'https://themealdb.com/api/json/v2/9973533/categories.php';\n\n    useEffect(() => {\n        const fetchCategories = async () => {\n            try {\n                axios.get(baseURL).then((res) => {\n                    const categories = res.data.categories;\n                    const hasCategories = categories.length;\n                    setCategoriesState({ categories, hasCategories, isLoading: false, error: null });\n                });\n            } catch (error) {\n                if (!axios.isCancel(error)) {\n                    setCategoriesState({ categories: emptyCategoriesList, hasCategories: false, isLoading: false, error });\n                }\n            }\n        };\n\n        fetchCategories();\n    }, []);\n\n    return { ...categoriesState };\n};\n","/* tslint:disable:no-magic-numbers */\nimport React from 'react';\nimport './Categories.scss';\nimport { Card, Grid, Header, Loader, Image } from 'semantic-ui-react';\nimport { useCategories } from './hooks/useCategories';\nimport { useHistory } from 'react-router';\n\nconst Categories = () => {\n    const { categories, isLoading } = useCategories();\n    const history = useHistory();\n\n    return (\n        <div className={'categories-container'}>\n            <Header as=\"h1\">Categories</Header>\n            {isLoading && <Loader active={true} inline=\"centered\" className={'categories-loader'} />}\n            {!isLoading && (\n                <Grid>\n                    {categories.map((category) => (\n                        <Grid.Column mobile={16} tablet={8} computer={3} key={category.idCategory}>\n                            <Card onClick={handleClick.bind(null, category.strCategory)}>\n                                <Image src={category.strCategoryThumb} wrapped={true} ui={true} />\n                                <Card.Content>\n                                    <Card.Header>{category.strCategory}</Card.Header>\n                                </Card.Content>\n                            </Card>\n                        </Grid.Column>\n                    ))}\n                </Grid>\n            )}\n        </div>\n    );\n\n    function handleClick(category: string) {\n        history.push({\n            pathname: `/categories/${category}`,\n        });\n    }\n};\n\nexport default Categories;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport type LatestMealsProps = {\n    idMeal: string;\n    strArea: string;\n    strCategory: string;\n    strInstructions: string;\n    strMeal: string;\n    strMealThumb: string;\n    strSource: string;\n    strYoutube: string;\n};\n\ntype LatestMealsState = {\n    latestMeals: Array<LatestMealsProps>;\n    hasLatestMeals?: boolean;\n    isLoading?: boolean;\n    error?: Error | null;\n};\n\nconst emptyLatestMealsList: Array<LatestMealsProps> = [];\n\nconst latestMealsEmptyState: LatestMealsState = {\n    latestMeals: emptyLatestMealsList,\n    hasLatestMeals: false,\n    isLoading: true,\n    error: null,\n};\n\nexport const useLatestMeals = () => {\n    const [latestMealsState, setLatestMealsState] = useState<LatestMealsState>(latestMealsEmptyState);\n    const baseURL = 'https://themealdb.com/api/json/v2/9973533/latest.php';\n\n    useEffect(() => {\n        const fetchLatestMeals = async () => {\n            try {\n                axios.get(baseURL).then((res) => {\n                    const latestMeals = res.data.meals;\n                    const hasLatestMeals = latestMeals.length;\n                    setLatestMealsState({ latestMeals, hasLatestMeals, isLoading: false, error: null });\n                });\n            } catch (error) {\n                if (!axios.isCancel(error)) {\n                    setLatestMealsState({ latestMeals: emptyLatestMealsList, hasLatestMeals: false, isLoading: false, error });\n                }\n            }\n        };\n\n        fetchLatestMeals();\n    }, []);\n\n    return { ...latestMealsState };\n};\n","import React from 'react';\nimport { useLatestMeals } from './hooks/useLatestMeals';\nimport { Header, Item, Loader, Label, Icon } from 'semantic-ui-react';\nimport './LatestMeals.scss';\n\nconst LatestMeals = () => {\n    const { latestMeals, isLoading } = useLatestMeals();\n    return (\n        <div className={'latest-meals-container'}>\n            <Header as=\"h1\">Latest Meals</Header>\n            {isLoading && <Loader active={true} inline=\"centered\" className={'categories-loader'} />}\n            {!isLoading && (\n                <Item.Group>\n                    {latestMeals.map((meal) => (\n                        <Item key={meal.idMeal}>\n                            <Item.Image size=\"small\" src={meal.strMealThumb} />\n                            <Item.Content>\n                                <Item.Header as=\"a\">{meal.strMeal}</Item.Header>\n                                <Label as=\"a\" color=\"grey\" content={meal.strCategory} />\n                                <Item.Meta>{meal.strArea}</Item.Meta>\n                                <Item.Description>{meal.strInstructions}</Item.Description>\n                                <Item.Extra>\n                                    {meal.strYoutube && (\n                                        <a href={meal.strYoutube} rel=\"noreferrer\" target=\"_blank\">\n                                            <Icon color=\"red\" name=\"youtube\" size=\"big\" />\n                                        </a>\n                                    )}\n                                </Item.Extra>\n                            </Item.Content>\n                            <hr />\n                        </Item>\n                    ))}\n                </Item.Group>\n            )}\n        </div>\n    );\n};\n\nexport default LatestMeals;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport type RandomMealProps = {\n    idMeal?: string;\n    strArea?: string;\n    strCategory?: string;\n    strInstructions?: string;\n    strMeal?: string;\n    strMealThumb?: string;\n    strSource?: string;\n    strYoutube?: string;\n};\n\ntype RandomMealState = {\n    randomMeal: RandomMealProps;\n    hasRandomMeal?: boolean;\n    isLoading?: boolean;\n    error?: Error | null;\n};\n\nconst emptyRandomMeal: RandomMealProps = {};\n\nconst randomMealEmptyState: RandomMealState = {\n    randomMeal: emptyRandomMeal,\n    hasRandomMeal: false,\n    isLoading: true,\n    error: null,\n};\n\nexport const useRandomMeal = () => {\n    const [randomMealState, setRandomMealState] = useState<RandomMealState>(randomMealEmptyState);\n    const baseURL = 'https://themealdb.com/api/json/v2/9973533/random.php';\n\n    useEffect(() => {\n        const fetchRandomMeals = async () => {\n            try {\n                axios.get(baseURL).then((res) => {\n                    const randomMeal = res.data.meals[0];\n                    const hasRandomMeals = randomMeal.length;\n                    setRandomMealState({ randomMeal, hasRandomMeal: hasRandomMeals, isLoading: false, error: null });\n                });\n            } catch (error) {\n                if (!axios.isCancel(error)) {\n                    setRandomMealState({ randomMeal: emptyRandomMeal, hasRandomMeal: false, isLoading: false, error });\n                }\n            }\n        };\n\n        fetchRandomMeals();\n    }, []);\n\n    return { ...randomMealState };\n};\n","import React from 'react';\nimport { useRandomMeal } from './hooks/useRandomMeal';\nimport { Header, Item, Loader, Label, Icon } from 'semantic-ui-react';\nimport './RandomMeals.scss';\n\nconst RandomMeals = () => {\n    const { randomMeal, isLoading } = useRandomMeal();\n    return (\n        <div className={'random-meal-container'}>\n            <Header as=\"h1\">Random Meals</Header>\n            {isLoading && <Loader active={true} inline=\"centered\" className={'categories-loader'} />}\n            {!isLoading && (\n                <Item.Group>\n                    <Item key={randomMeal.idMeal}>\n                        <Item.Image size=\"big\" src={randomMeal.strMealThumb} />\n                        <Item.Content>\n                            <Item.Header as=\"a\">{randomMeal.strMeal}</Item.Header>\n                            <Label as=\"a\" color=\"grey\" content={randomMeal.strCategory} />\n                            <Item.Meta>{randomMeal.strArea}</Item.Meta>\n                            <Item.Description>{randomMeal.strInstructions}</Item.Description>\n                            <Item.Extra>\n                                {randomMeal.strYoutube && (\n                                    <a href={randomMeal.strYoutube} rel=\"noreferrer\" target=\"_blank\">\n                                        <Icon color=\"red\" name=\"youtube\" size=\"big\" />\n                                    </a>\n                                )}\n                            </Item.Extra>\n                        </Item.Content>\n                        <hr />\n                    </Item>\n                </Item.Group>\n            )}\n        </div>\n    );\n};\n\nexport default RandomMeals;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { MealsListProps } from '../../meals/Meals';\n\ntype MealsState = {\n    meals: Array<MealsListProps>;\n    hasMeals?: boolean;\n    isLoading?: boolean;\n    error?: Error | null;\n};\n\nconst emptyMealList: Array<MealsListProps> = [];\n\nconst mealsEmptyState: MealsState = {\n    meals: emptyMealList,\n    hasMeals: false,\n    isLoading: true,\n    error: null,\n};\n\nexport const useBrowseByName = (mealsFirstLetter: string) => {\n    const [mealsState, setMealsState] = useState<MealsState>(mealsEmptyState);\n    const baseURL = 'https://themealdb.com/api/json/v1/1/search.php?f=';\n\n    useEffect(() => {\n        const fetchMealsByName = async () => {\n            try {\n                axios.get(baseURL + mealsFirstLetter).then((res) => {\n                    const meals = res.data.meals;\n                    const hasMeals = meals ? meals.length : false;\n                    setMealsState({ meals, hasMeals, isLoading: false, error: null });\n                });\n            } catch (error) {\n                if (!axios.isCancel(error)) {\n                    setMealsState({ meals: emptyMealList, hasMeals: false, isLoading: false, error });\n                }\n            }\n        };\n\n        if (mealsFirstLetter) fetchMealsByName();\n    }, [mealsFirstLetter]);\n\n    return { ...mealsState };\n};\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport type MealDetailsProps = {\n    idMeal?: string;\n    strMeal?: string;\n    strCategory?: string;\n    strArea?: string;\n    strInstructions?: string;\n    strMealThumb?: string;\n    strIngredient1?: any;\n    strIngredient2?: any;\n    strIngredient3?: any;\n    strIngredient4?: any;\n    strIngredient5?: any;\n    strIngredient6?: any;\n    strIngredient7?: any;\n    strIngredient8?: any;\n    strIngredient9?: any;\n    strIngredient10?: any;\n    strIngredient11?: any;\n    strIngredient12?: any;\n    strIngredient13?: any;\n    strIngredient14?: any;\n    strIngredient15?: any;\n    strMeasure1?: string;\n    strMeasure2?: string;\n    strMeasure3?: string;\n    strMeasure4?: string;\n    strMeasure5?: string;\n    strMeasure6?: string;\n    strMeasure7?: string;\n    strMeasure8?: string;\n    strMeasure9?: string;\n    strMeasure10?: string;\n    strMeasure11?: string;\n    strMeasure12?: string;\n    strMeasure13?: string;\n    strMeasure14?: string;\n    strMeasure15?: string;\n    strYoutube?: string;\n};\n\nexport type MealDetailsState = {\n    mealDetails: MealDetailsProps;\n    hasMealDetails?: boolean;\n    isLoading?: boolean;\n    error?: Error | null;\n};\n\nconst emptyMealDetails: MealDetailsProps = {};\n\nconst mealDetailsEmptyState: MealDetailsState = {\n    mealDetails: emptyMealDetails,\n    hasMealDetails: false,\n    isLoading: true,\n    error: null,\n};\n\nexport const useMealDetails = (mealId: string) => {\n    const [mealDetailsState, setMealDetailsState] = useState<MealDetailsState>(mealDetailsEmptyState);\n    const baseURL = 'https://themealdb.com/api/json/v2/9973533/lookup.php?i=';\n\n    useEffect(() => {\n        const fetchMealDetails = async () => {\n            try {\n                axios.get(baseURL + mealId).then((res) => {\n                    const mealDetails = res.data.meals[0];\n                    const hasMealDetails = res.data.meals.length;\n                    setMealDetailsState({ mealDetails, hasMealDetails, isLoading: false, error: null });\n                });\n            } catch (error) {\n                if (!axios.isCancel(error)) {\n                    setMealDetailsState({ mealDetails: emptyMealDetails, hasMealDetails: false, isLoading: false, error });\n                }\n            }\n        };\n\n        if (mealId) fetchMealDetails();\n    }, [mealId]);\n\n    return { ...mealDetailsState };\n};\n","/* tslint:disable:no-magic-numbers */\nimport { Grid, Header, Icon, Item, List, Loader, Modal } from 'semantic-ui-react';\nimport { useMealDetails } from './hooks/useMealDetails';\nimport React from 'react';\nimport './MealDetails.scss';\n\ntype MealDetailsProps = {\n    mealId: string;\n    open: boolean;\n    openDialog: () => void;\n    closeDialog: () => void;\n};\n\nconst MealDetails = ({ mealId, open, openDialog, closeDialog }: MealDetailsProps) => {\n    const { mealDetails, isLoading } = useMealDetails(mealId);\n\n    return (\n        <React.Fragment>\n            {isLoading && <Loader active={true} inline=\"centered\" className={'meal-details-loader'} />}\n            {!isLoading && (\n                <Modal closeIcon={true} open={open} onClose={closeDialog} onOpen={openDialog} className={'meal-details-dialog'}>\n                    <Header content={mealDetails.strMeal} />\n                    <Modal.Content>\n                        <Item.Group>\n                            <Item>\n                                <Item.Image size=\"large\" src={mealDetails.strMealThumb} />\n                                <Item.Content>\n                                    <Item.Header as=\"a\">Instructions</Item.Header>\n                                    {mealDetails.strYoutube && (\n                                        <a href={mealDetails.strYoutube} rel=\"noreferrer\" target=\"_blank\">\n                                            <Icon color=\"red\" name=\"youtube\" size=\"big\" />\n                                        </a>\n                                    )}\n                                    <Item.Meta>{mealDetails.strArea}</Item.Meta>\n                                    <Item.Description>{mealDetails.strInstructions}</Item.Description>\n                                    <Item.Header as=\"a\">Ingredients</Item.Header>\n                                    <Item.Description>{renderIngredients()}</Item.Description>\n                                    <Item.Extra />\n                                </Item.Content>\n                            </Item>\n                        </Item.Group>\n                    </Modal.Content>\n                </Modal>\n            )}\n        </React.Fragment>\n    );\n\n    function renderIngredients() {\n        return (\n            <List>\n                <Grid columns={3} divided={true}>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient1}</List.Header>\n                                {mealDetails.strMeasure1}\n                            </List.Item>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient2}</List.Header>\n                                {mealDetails.strMeasure2}\n                            </List.Item>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient3}</List.Header>\n                                {mealDetails.strMeasure3}\n                            </List.Item>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient4}</List.Header>\n                                {mealDetails.strMeasure4}\n                            </List.Item>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient5}</List.Header>\n                                {mealDetails.strMeasure5}\n                            </List.Item>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient6}</List.Header>\n                                {mealDetails.strMeasure6}\n                            </List.Item>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient7}</List.Header>\n                                {mealDetails.strMeasure7}\n                            </List.Item>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient8}</List.Header>\n                                {mealDetails.strMeasure8}\n                            </List.Item>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient9}</List.Header>\n                                {mealDetails.strMeasure9}\n                            </List.Item>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient10}</List.Header>\n                                {mealDetails.strMeasure10}\n                            </List.Item>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient11}</List.Header>\n                                {mealDetails.strMeasure11}\n                            </List.Item>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient12}</List.Header>\n                                {mealDetails.strMeasure12}\n                            </List.Item>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient13}</List.Header>\n                                {mealDetails.strMeasure13}\n                            </List.Item>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient14}</List.Header>\n                                {mealDetails.strMeasure14}\n                            </List.Item>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <List.Item>\n                                <List.Header>{mealDetails.strIngredient15}</List.Header>\n                                {mealDetails.strMeasure15}\n                            </List.Item>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </List>\n        );\n    }\n};\n\nexport default MealDetails;\n","/* tslint:disable:no-magic-numbers */\nimport { Card, Grid, Image } from 'semantic-ui-react';\nimport React, { useState } from 'react';\nimport MealDetails from './mealDetails/MealDetails';\n\nexport type MealsListProps = {\n    idMeal: string;\n    strMeal: string;\n    strMealThumb: string;\n};\n\ntype MealsProps = {\n    meals: Array<MealsListProps>;\n    isLoading?: boolean;\n};\n\nconst Meals = ({ meals, isLoading }: MealsProps) => {\n    const [selectedMealId, setSelectedMealId] = useState<string>('');\n    const [openDialog, setOpenDialog] = React.useState(false);\n\n    return (\n        <>\n            <Grid>\n                {meals.map((meal) => (\n                    <Grid.Column mobile={16} tablet={8} computer={2} key={meal.idMeal}>\n                        <Card onClick={handleClick.bind(null, meal.idMeal)}>\n                            <Image src={meal.strMealThumb} wrapped={true} ui={true} />\n                            <Card.Content>\n                                <Card.Header>{meal.strMeal}</Card.Header>\n                            </Card.Content>\n                        </Card>\n                    </Grid.Column>\n                ))}\n            </Grid>\n            {openDialog && <MealDetails mealId={selectedMealId} open={openDialog} openDialog={openMealDetailsDialog} closeDialog={closeMealDetailsDialog} />}\n        </>\n    );\n\n    function handleClick(mealId: string) {\n        setSelectedMealId(mealId);\n        setOpenDialog(true);\n    }\n\n    function openMealDetailsDialog() {\n        setOpenDialog(true);\n    }\n\n    function closeMealDetailsDialog() {\n        setSelectedMealId('');\n        setOpenDialog(false);\n    }\n};\n\nexport default Meals;\n","import { useState } from 'react';\nimport axios from 'axios';\nimport { MealsListProps } from '../../meals/Meals';\n\ntype SearchResultsState = {\n    searchResults: Array<MealsListProps>;\n    hasSearchResults?: boolean;\n    isLoading?: boolean;\n    error?: Error | null;\n};\n\nconst emptySearchResults: Array<MealsListProps> = [];\n\nconst searchResultsEmptyState: SearchResultsState = {\n    searchResults: emptySearchResults,\n    hasSearchResults: false,\n    isLoading: true,\n    error: null,\n};\n\nexport const useSearch = () => {\n    const [searchResultsState, setSearchResultsState] = useState<SearchResultsState>(searchResultsEmptyState);\n    const baseURL = 'https://themealdb.com/api/json/v1/1/search.php?s=';\n\n    async function searchByName(searchQuery: string) {\n        try {\n            axios.get(baseURL + searchQuery).then((res) => {\n                const searchResults = res.data.meals;\n                const hasSearchResults = res.data.meals ? res.data.meals.length : false;\n                setSearchResultsState({ searchResults, hasSearchResults, isLoading: false, error: null });\n            });\n        } catch (error) {\n            if (!axios.isCancel(error)) {\n                setSearchResultsState({ searchResults: emptySearchResults, hasSearchResults: false, isLoading: false, error });\n            }\n        }\n    }\n    return {\n        searchResultsState,\n        searchByName,\n    };\n};\n","import React, { useState } from 'react';\nimport { Button, Header, Input, Tab } from 'semantic-ui-react';\nimport { useBrowseByName } from './hooks/useBrowseByName';\nimport Meals from '../meals/Meals';\nimport { useSearch } from './hooks/useSearch';\nimport './Dashboard.scss';\n\nconst Dashboard = () => {\n    const [mealFirstLetter, setMealFirstLetter] = useState<string>('');\n    const { meals, hasMeals, isLoading } = useBrowseByName(mealFirstLetter);\n    const [searchQuery, setSearchQuery] = useState<string>('');\n    const { searchResultsState, searchByName } = useSearch();\n    const panes = [];\n\n    for (const char of 'abcdefghijklmnopqrstuvwxyz') {\n        panes.push({\n            menuItem: char.toUpperCase(),\n            render: () => <Tab.Pane attached={false}>{renderTabContent(char)}</Tab.Pane>,\n        });\n    }\n\n    panes.push({\n        menuItem: { key: 'search', icon: 'search', content: 'Search' },\n        render: () => <Tab.Pane attached={false}>{renderSearchContent()}</Tab.Pane>,\n    });\n\n    return (\n        <div className={'browse-country-container'}>\n            <Header as=\"h1\">Dashboard</Header>\n            <Tab menu={{ pointing: true }} panes={panes} />\n        </div>\n    );\n\n    function renderTabContent(firstLetter: string) {\n        setMealFirstLetter(firstLetter);\n        if (!hasMeals) {\n            return <p>No meals found</p>;\n        }\n        return <Meals meals={meals} isLoading={isLoading} />;\n    }\n\n    function renderSearchContent() {\n        return (\n            <>\n                <Input\n                    className={'search-input'}\n                    type={'text'}\n                    placeholder={'Search...'}\n                    action={true}\n                    onChange={(e: any, { name, value }: any) => setSearchQuery(value)}\n                    onKeyDown={handleKeyDown}\n                >\n                    <input />\n                    <Button type={'submit'} onClick={() => handleSubmit()}>\n                        Search\n                    </Button>\n                </Input>\n                {!searchResultsState.isLoading && searchResultsState.hasSearchResults && <Meals meals={searchResultsState.searchResults} />}\n                {!searchResultsState.isLoading && !searchResultsState.hasSearchResults && <p>No meals found</p>}\n            </>\n        );\n    }\n\n    function handleSubmit() {\n        searchByName(searchQuery);\n    }\n\n    function handleKeyDown(e: any) {\n        if (e.key === 'Enter') {\n            searchByName(searchQuery);\n        }\n    }\n};\n\nexport default Dashboard;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { MealsListProps } from '../../meals/Meals';\n\ntype MealsState = {\n    meals: Array<MealsListProps>;\n    hasMeals?: boolean;\n    isLoading?: boolean;\n    error?: Error | null;\n};\n\nconst emptyMealList: Array<MealsListProps> = [];\n\nconst mealsEmptyState: MealsState = {\n    meals: emptyMealList,\n    hasMeals: false,\n    isLoading: true,\n    error: null,\n};\n\nexport const useCategory = (categoryId: string) => {\n    const [mealsState, setMealsState] = useState<MealsState>(mealsEmptyState);\n    const baseURL = 'https://themealdb.com/api/json/v2/9973533/filter.php?c=';\n\n    useEffect(() => {\n        const fetchCategory = async () => {\n            try {\n                axios.get(baseURL + categoryId).then((res) => {\n                    const meals = res.data.meals;\n                    const hasMeals = meals.length;\n                    setMealsState({ meals, hasMeals, isLoading: false, error: null });\n                });\n            } catch (error) {\n                if (!axios.isCancel(error)) {\n                    setMealsState({ meals: emptyMealList, hasMeals: false, isLoading: false, error });\n                }\n            }\n        };\n\n        fetchCategory();\n    }, [categoryId]);\n\n    return { ...mealsState };\n};\n","import React from 'react';\nimport { SemanticICONS } from 'semantic-ui-react';\nimport { RouteComponentProps } from 'react-router';\nimport Categories from '../components/categories/Categories';\nimport LatestMeals from '../components/latestMeals/LatestMeals';\nimport RandomMeals from '../components/randomMeals/RandomMeals';\nimport Dashboard from '../components/dashboard/Dashboard';\nimport Category from '../components/category/Category';\n\nexport type RouteProps = {\n    path: string;\n    exact: boolean;\n    label?: string;\n    icon?: SemanticICONS;\n    isNaviItem: boolean;\n    component: React.ComponentType<RouteComponentProps<any>>;\n    routes?: Array<RouteProps>;\n};\n\nexport const routes: Array<RouteProps> = [\n    {\n        path: '/',\n        exact: true,\n        label: 'Dashboard',\n        icon: 'dashboard',\n        isNaviItem: true,\n        component: Dashboard,\n    },\n    {\n        path: '/categories',\n        exact: true,\n        label: 'Categories',\n        icon: 'list ul',\n        isNaviItem: true,\n        component: Categories,\n    },\n    {\n        path: '/categories/:id',\n        exact: true,\n        isNaviItem: false,\n        component: Category,\n    },\n    {\n        path: '/latestMeals',\n        exact: true,\n        label: 'Latest Meals',\n        icon: 'food',\n        isNaviItem: true,\n        component: LatestMeals,\n    },\n    {\n        path: '/randomMeals',\n        exact: true,\n        label: 'Random Meals',\n        icon: 'random',\n        isNaviItem: true,\n        component: RandomMeals,\n    },\n];\n","/* tslint:disable:no-magic-numbers */\nimport { useParams } from 'react-router-dom';\nimport { useCategory } from './hooks/useCategory';\nimport { Header, Icon, Loader } from 'semantic-ui-react';\nimport React from 'react';\nimport './Category.scss';\nimport { useHistory } from 'react-router';\nimport Meals from '../meals/Meals';\n\ntype MatchParams = { id: string };\n\nconst Category = () => {\n    const categoryId = useParams<MatchParams>().id;\n    const { meals, isLoading } = useCategory(categoryId);\n    const history = useHistory();\n\n    return (\n        <React.Fragment>\n            <div className={'category-container'}>\n                <Header as=\"h1\">\n                    {categoryId}\n                    <div className={'back-link'} onClick={backToCategories.bind(null, null)}>\n                        <Icon name=\"angle left\" />\n                        <span>back to categories</span>\n                    </div>\n                </Header>\n                {isLoading && <Loader active={true} inline=\"centered\" className={'category-loader'} />}\n                {!isLoading && <Meals meals={meals} isLoading={isLoading} />}\n            </div>\n        </React.Fragment>\n    );\n\n    function backToCategories() {\n        history.push({\n            pathname: '/categories',\n        });\n    }\n};\n\nexport default Category;\n","import React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { Icon, Menu } from 'semantic-ui-react';\nimport { routes } from '../router/routes';\n\nconst SidebarMenu = () => (\n    <nav>\n        <Menu fluid={true} color=\"red\" vertical={true} icon=\"labeled\" className={'app-nav'}>\n            {routes.map((route) =>\n                route.isNaviItem ? (\n                    <Route\n                        key={route.path}\n                        exact={route.exact}\n                        path={route.path}\n                        children={({ match }) => (\n                            <Menu.Item as={Link} to={route.path} active={!!match}>\n                                <Icon name={route.icon} />\n                                {route.label}\n                            </Menu.Item>\n                        )}\n                    />\n                ) : null\n            )}\n        </Menu>\n    </nav>\n);\n\nexport default SidebarMenu;\n","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport './NotFound.scss';\n\nconst NotFound = () => {\n    return (\n        <div className={'not-found-page'}>\n            <div className={'error'}>404</div>\n            <div className={'page-msg'}>Oops! This page Could Not Be Found</div>\n            <Link to={'/'}>\n                <Button basic={true} color=\"blue\">\n                    <Icon name=\"list ul\" />\n                    GO TO CATEGORIES\n                </Button>\n            </Link>\n        </div>\n    );\n};\n\nexport default NotFound;\n","export default __webpack_public_path__ + \"static/media/meal_logo.9ee959da.png\";","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport SidebarMenu from './components/SidebarMenu';\nimport './App.scss';\nimport { Header } from 'semantic-ui-react';\nimport NotFound from './components/notFound/NotFound';\nimport mealLogo from './images/meal_logo.png';\nimport { routes, RouteProps } from './router/routes';\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <HashRouter basename={'/the-meal-db'}>\n                <SidebarMenu />\n                <header>\n                    <Header as=\"h2\" image={mealLogo} content=\"The Meal DB\" data-cy=\"pageTitle\" />\n                </header>\n                <div className={'container'}>\n                    <Switch>\n                        {flatten(routes).map((route: RouteProps) => (\n                            <Route key={route.path} path={route.path} exact={route.exact} component={route.component} />\n                        ))}\n                        <Route component={NotFound} />\n                    </Switch>\n                </div>\n            </HashRouter>\n        </React.Fragment>\n    );\n}\n\nfunction flatten(routesObjc: Array<RouteProps>) {\n    const flatRoutes: any = [];\n    routesObjc.forEach((route) => {\n        if (route.routes) {\n            flatRoutes.push({ ...route, exact: true });\n            flatRoutes.push(...flatten(route.routes));\n        } else {\n            flatRoutes.push(route);\n        }\n    });\n    return flatRoutes;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}